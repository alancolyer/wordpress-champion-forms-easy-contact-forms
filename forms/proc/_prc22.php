<?php switch ($phase->index) { case 6: $jssid = $fld->get('id') . '-sid'; if (isset($map[$jssid])) { $map['sid'] = $map[$jssid]; } $filerequestid = 'CustomFormsFileUpload_' . $fld->get('id'); $test = isset($_FILES[$filerequestid]) && $_FILES[$filerequestid]['error'] == UPLOAD_ERR_OK; if ($test) { $filespec = $_FILES[$filerequestid]; } else { $filespec = EasyContactFormsSecurityManager::getGetSessionValue($map, $filerequestid); if (empty($filespec)) { return; } $filespec = stripslashes($filespec); $filespec = unserialize($filespec); } $cfef =  EasyContactFormsClassLoader::getObject('CustomFormEntryFiles', true); $cfef->set('CustomFormsEntries', $cfe->get('id')); $cfef->set('Description', $fld->get('Description')); $cfef->set('Date', date(DATE_ATOM)); $cfef->save(); $rmap = array(); $rmap['t'] = 'CustomFormEntryFiles'; $rmap['oid'] = $cfef->get('id'); $rmap['fld'] = 'File'; $rmap['protect'] = 'on'; $files = EasyContactFormsClassLoader::getObject('Files'); $uplresult = $files->protectedUpload($rmap, $filespec); if (!$uplresult) { return; } $filename = $filespec['name']; $filename = EasyContactFormsUtils::addMSlashes($filename); $value = $filename; $open = (string) $xml->OnlyAdminsCanDownload != 'on'; $link = $files->getFileDownloadLink($rmap['t'], $rmap['fld'], $rmap['oid'], $open); $displayvalue = "<a href='{$link}'>{$filename}</a>"; $displayxmlvalue = simplexml_load_string("<a>{$filename}</a>"); $displayxmlvalue->addAttribute('href', $link); $attachConfirmation = isset($xml->AttachToConfirmation) && $xml->AttachToConfirmation == 'on'; $attachNotification = isset($xml->AttachToNotification) && $xml->AttachToNotification == 'on'; if ($attachConfirmation || $attachNotification) { $storageName = $files->getFileValue('Storagename', 'File', $cfef); $storageName = EASYCONTACTFORMS__fileUploadDir . '/' . $storageName; $name = $files->getFileValue('Name', 'File', $cfef); $spec = (object) array('path' => $storageName, 'name' => $name); if ($attachConfirmation) { $attachments->confirmation[] = $spec; } if ($attachNotification) { $attachments->notification[] = $spec; } } break; case 4: $filerequestid = 'CustomFormsFileUpload_' . $fld->get('id'); $test = isset($_FILES[$filerequestid]) && $_FILES[$filerequestid]['error'] == UPLOAD_ERR_OK; if (!$test) { return; } $filedirectory = EASYCONTACTFORMS__fileUploadDir; if (!is_dir($filedirectory)) { EasyContactFormsUtils::createFolder($filedirectory); } $ds = DIRECTORY_SEPARATOR; $sid = $map['sid']; $filespec = $_FILES[$filerequestid]; $newpath = $filedirectory . $ds . $sid .  $fld->get('id'); $tmpname = $filespec['tmp_name']; if (!move_uploaded_file($tmpname, $newpath)) { return; } $newpath = str_replace("\\", "/", $newpath); $filespec['tmp_name'] = $newpath; $filespec = serialize($filespec); $filespec = EasyContactFormsUtils::addMSlashes($filespec); EasyContactFormsSecurityManager::setSessionValue($filerequestid, $filespec, $map); break; case 3: if (!isset($this->sessionid)) { $this->sessionid = EasyContactFormsSecurityManager::getSid(); } $varmap['id-' . $fldid] = $this->sessionid; break; case 8: if (isset($ufovalidators) && $ufovalidators === FALSE) {$ufovalidators = TRUE;$vjs[] = "if(typeof(ufoValidators)=='undefined'){ufoValidators={};};";} if (!isset($form->fileuploadsriptloaded)) { $form->fileuploadsriptloaded = true; $vjs[] = "ufoValidators.validfileattached = function(config, evt){var fileupload = ufoFormsConfig.uploads[config.form][config.id];if (!fileupload.fileattached && !config.Required) return undefined;if (!fileupload.fileattached && config.Required) return false;return true;};"; $rows[]='<script type="text/javascript" src="' . EASYCONTACTFORMS__engineWebAppDirectory . '/js/ajaxupload.js"></script>'; } if (!is_dir(EASYCONTACTFORMS__fileUploadDir)) { EasyContactFormsUtils::createFolder(EASYCONTACTFORMS__fileUploadDir); } break; case 5: $filerequestid = 'CustomFormsFileUpload_' . $fld->get('id'); $test = isset($_FILES[$filerequestid]) && $_FILES[$filerequestid]['error'] == UPLOAD_ERR_OK; if ($test) { $valid = TRUE; } else { $jssid = $fld->get('id') . '-sid'; if (isset($varmap[$jssid])) { $varmap['sid'] = $varmap[$jssid]; } $str = EasyContactFormsSecurityManager::getGetSessionValue($varmap, $filerequestid); $valid = !empty($str); if (!$valid) { $this->processInvalid($fld, 'validfileattached', $config); } } break; } ?>